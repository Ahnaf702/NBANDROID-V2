/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.nbandroid.netbeans.gradle.v2.template.mobile;

import com.android.builder.model.ApiVersion;
import com.android.builder.model.Variant;
import com.android.sdklib.SdkVersionInfo;
import java.io.File;
import javax.swing.JPanel;
import org.nbandroid.netbeans.gradle.v2.project.template.AndroidProjectTemplatePanelVisualAndroidSettings;
import static org.nbandroid.netbeans.gradle.v2.project.template.AndroidProjectTemplatePanelVisualAndroidSettings.PROP_MAX_BUILD_LEVEL;
import static org.nbandroid.netbeans.gradle.v2.project.template.AndroidProjectTemplatePanelVisualAndroidSettings.PROP_PHONE_TABLET_PLATFORM;
import org.nbandroid.netbeans.gradle.v2.project.template.AndroidProjectTemplatePanelVisualBasicSettings;
import static org.nbandroid.netbeans.gradle.v2.project.template.AndroidProjectTemplatePanelVisualBasicSettings.PROP_PROJECT_SDK;
import org.nbandroid.netbeans.gradle.v2.sdk.AndroidPlatformInfo;
import org.nbandroid.netbeans.gradle.v2.sdk.AndroidSdk;
import static org.nbandroid.netbeans.gradle.v2.template.mobile.MobileActivityWizardIterator.BUILD_TOOL_VERSION;
import static org.nbandroid.netbeans.gradle.v2.template.mobile.MobileActivityWizardIterator.ERROR_NO_ANDROID;
import static org.nbandroid.netbeans.gradle.v2.template.mobile.MobileActivityWizardIterator.MANIFEST_ROOT_FOLDER;
import org.openide.WizardDescriptor;

public final class MobileActivityVisualSummaryPanel extends JPanel {

    private final MobileActivityWizardSummaryPanel controler;

    /**
     * Creates new form MobileActivityVisualPanel1
     */
    public MobileActivityVisualSummaryPanel(MobileActivityWizardSummaryPanel controler) {
        initComponents();
        this.controler = controler;
    }

    @Override
    public String getName() {
        return "Android project summary";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        projectFolder = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        packageName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        androidSdk = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        manifestFolder = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        platform = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        minSdkVersion = new javax.swing.JLabel();
        targetSdkVersion = new javax.swing.JLabel();
        buildToolVersion = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(MobileActivityVisualSummaryPanel.class, "MobileActivityVisualSummaryPanel.jLabel1.text")); // NOI18N

        projectFolder.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(projectFolder, org.openide.util.NbBundle.getMessage(MobileActivityVisualSummaryPanel.class, "MobileActivityVisualSummaryPanel.projectFolder.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(MobileActivityVisualSummaryPanel.class, "MobileActivityVisualSummaryPanel.jLabel2.text")); // NOI18N

        packageName.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(packageName, org.openide.util.NbBundle.getMessage(MobileActivityVisualSummaryPanel.class, "MobileActivityVisualSummaryPanel.packageName.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(MobileActivityVisualSummaryPanel.class, "MobileActivityVisualSummaryPanel.jLabel3.text")); // NOI18N

        androidSdk.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(androidSdk, org.openide.util.NbBundle.getMessage(MobileActivityVisualSummaryPanel.class, "MobileActivityVisualSummaryPanel.androidSdk.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(MobileActivityVisualSummaryPanel.class, "MobileActivityVisualSummaryPanel.jLabel4.text")); // NOI18N

        manifestFolder.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(manifestFolder, org.openide.util.NbBundle.getMessage(MobileActivityVisualSummaryPanel.class, "MobileActivityVisualSummaryPanel.manifestFolder.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(MobileActivityVisualSummaryPanel.class, "MobileActivityVisualSummaryPanel.jLabel5.text")); // NOI18N

        platform.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(platform, org.openide.util.NbBundle.getMessage(MobileActivityVisualSummaryPanel.class, "MobileActivityVisualSummaryPanel.platform.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(MobileActivityVisualSummaryPanel.class, "MobileActivityVisualSummaryPanel.jLabel6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(MobileActivityVisualSummaryPanel.class, "MobileActivityVisualSummaryPanel.jLabel7.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(MobileActivityVisualSummaryPanel.class, "MobileActivityVisualSummaryPanel.jLabel8.text")); // NOI18N

        minSdkVersion.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(minSdkVersion, org.openide.util.NbBundle.getMessage(MobileActivityVisualSummaryPanel.class, "MobileActivityVisualSummaryPanel.minSdkVersion.text")); // NOI18N

        targetSdkVersion.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(targetSdkVersion, org.openide.util.NbBundle.getMessage(MobileActivityVisualSummaryPanel.class, "MobileActivityVisualSummaryPanel.targetSdkVersion.text")); // NOI18N

        buildToolVersion.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(buildToolVersion, org.openide.util.NbBundle.getMessage(MobileActivityVisualSummaryPanel.class, "MobileActivityVisualSummaryPanel.buildToolVersion.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(projectFolder)
                    .addComponent(packageName)
                    .addComponent(androidSdk)
                    .addComponent(manifestFolder)
                    .addComponent(platform)
                    .addComponent(minSdkVersion)
                    .addComponent(targetSdkVersion)
                    .addComponent(buildToolVersion))
                .addContainerGap(368, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(projectFolder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(packageName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(manifestFolder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(androidSdk))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(platform))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(minSdkVersion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(targetSdkVersion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(buildToolVersion))
                .addContainerGap(116, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel androidSdk;
    private javax.swing.JLabel buildToolVersion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel manifestFolder;
    private javax.swing.JLabel minSdkVersion;
    private javax.swing.JLabel packageName;
    private javax.swing.JLabel platform;
    private javax.swing.JLabel projectFolder;
    private javax.swing.JLabel targetSdkVersion;
    // End of variables declaration//GEN-END:variables

    boolean valid(WizardDescriptor wizardDescriptor) {
        Object property = wizardDescriptor.getProperty(ERROR_NO_ANDROID);
        if ((property instanceof Boolean) && ((Boolean) property)) {
            wizardDescriptor.putProperty("WizardPanel_errorMessage",
                    "Unsupported project type.");
            return false;
        }
        property = wizardDescriptor.getProperty(AndroidProjectTemplatePanelVisualBasicSettings.PROP_PROJECT_PACKAGE);
        if (!(property instanceof String) || ((String) property).isEmpty()) {
            wizardDescriptor.putProperty("WizardPanel_errorMessage",
                    "Bad package name.");
            return false;
        }
        property = wizardDescriptor.getProperty(MANIFEST_ROOT_FOLDER);
        if (!(property instanceof File)) {
            wizardDescriptor.putProperty("WizardPanel_errorMessage",
                    "Android manifest was not found.");
            return false;
        }
        property = wizardDescriptor.getProperty(PROP_PROJECT_SDK);
        if (!(property instanceof AndroidSdk)) {
            wizardDescriptor.putProperty("WizardPanel_errorMessage",
                    "Android SDK was not found.");
            return false;
        }
        property = wizardDescriptor.getProperty(PROP_PHONE_TABLET_PLATFORM);
        if (!(property instanceof AndroidPlatformInfo)) {
            wizardDescriptor.putProperty("WizardPanel_errorMessage",
                    "Android Platform was not found.");
            return false;
        }
        property = wizardDescriptor.getProperty(MobileActivityWizardIterator.BUILD_VARIANT);
        if (!(property instanceof Variant)) {
            wizardDescriptor.putProperty("WizardPanel_errorMessage",
                    "Android Build variant was not found.");
            return false;
        }
        return true;
    }

    void read(WizardDescriptor wizardDescriptor) {
        Object property = wizardDescriptor.getProperty(AndroidProjectTemplatePanelVisualBasicSettings.PROP_PROJECT_DIR);
        if (property instanceof File) {
            projectFolder.setText(((File) property).getAbsolutePath());
        }
        property = wizardDescriptor.getProperty(AndroidProjectTemplatePanelVisualBasicSettings.PROP_PROJECT_PACKAGE);
        if (property instanceof String) {
            packageName.setText(((String) property));
        }
        property = wizardDescriptor.getProperty(MANIFEST_ROOT_FOLDER);
        if (property instanceof File) {
            manifestFolder.setText(((File) property).getAbsolutePath());
        }
        property = wizardDescriptor.getProperty(PROP_PROJECT_SDK);
        if (property instanceof AndroidSdk) {
            androidSdk.setText(((AndroidSdk) property).getDisplayName());
            androidSdk.setToolTipText(((AndroidSdk) property).getSdkPath());
        }
        property = wizardDescriptor.getProperty(PROP_PHONE_TABLET_PLATFORM);
        if (property instanceof AndroidPlatformInfo) {
            platform.setText(SdkVersionInfo.getCodeName(((AndroidPlatformInfo) property).getAndroidVersion().getApiLevel()) + " " + SdkVersionInfo.getVersionString(((AndroidPlatformInfo) property).getAndroidVersion().getApiLevel()));
            platform.setToolTipText(((AndroidPlatformInfo) property).getAndroidVersion().getApiString());
        }
        property = wizardDescriptor.getProperty(MobileActivityWizardIterator.BUILD_VARIANT);
        if (property instanceof Variant) {
            Variant variant = (Variant) property;
            ApiVersion minSdk = variant.getMergedFlavor().getMinSdkVersion();
            minSdkVersion.setText(SdkVersionInfo.getCodeName(minSdk.getApiLevel()) + " " + SdkVersionInfo.getVersionString(minSdk.getApiLevel()));
            minSdkVersion.setToolTipText(minSdk.getApiString());
            ApiVersion targetSdk = variant.getMergedFlavor().getTargetSdkVersion();
            targetSdkVersion.setText(SdkVersionInfo.getCodeName(targetSdk.getApiLevel()) + " " + SdkVersionInfo.getVersionString(targetSdk.getApiLevel()));
            targetSdkVersion.setToolTipText(targetSdk.getApiString());
            wizardDescriptor.putProperty(PROP_MAX_BUILD_LEVEL, targetSdk.getApiLevel());
            wizardDescriptor.putProperty(AndroidProjectTemplatePanelVisualAndroidSettings.PROP_WEAR_ENABLED, false);
            wizardDescriptor.putProperty(AndroidProjectTemplatePanelVisualAndroidSettings.PROP_TV_ENABLED, false);
        }
        property = wizardDescriptor.getProperty(BUILD_TOOL_VERSION);
        if (property instanceof String) {
            buildToolVersion.setText(((String) property));
        }
    }

    void store(WizardDescriptor wizardDescriptor) {
    }

    void validate(WizardDescriptor wizardDescriptor) {
    }

}
