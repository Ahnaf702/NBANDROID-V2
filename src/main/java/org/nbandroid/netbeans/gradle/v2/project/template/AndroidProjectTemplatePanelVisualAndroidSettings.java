/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.nbandroid.netbeans.gradle.v2.project.template;

import com.android.sdklib.SdkVersionInfo;
import java.awt.Component;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.plaf.basic.BasicComboBoxRenderer;
import org.nbandroid.netbeans.gradle.v2.project.distributions.AndroidDistributionsPanel;
import org.nbandroid.netbeans.gradle.v2.project.distributions.AndroidDistributionsProvider;
import static org.nbandroid.netbeans.gradle.v2.project.template.AndroidProjectTemplatePanelVisualBasicSettings.PROP_PROJECT_SDK;
import org.nbandroid.netbeans.gradle.v2.sdk.AndroidPlatformInfo;
import org.nbandroid.netbeans.gradle.v2.sdk.AndroidSdk;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.WizardDescriptor;
import org.openide.WizardValidationException;

public class AndroidProjectTemplatePanelVisualAndroidSettings extends JPanel implements ItemListener {

    public static final String PROP_PHONE_TABLET_ENABLED = "PROP_PHONE_TABLET_ENABLED";
    public static final String PROP_PHONE_TABLET_PLATFORM = "PROP_PHONE_TABLET_SDK";
    public static final String PROP_WEAR_ENABLED = "PROP_WEAR_ENABLED";
    public static final String PROP_WEAR_PLATFORM = "PROP_WEAR_PLATFORM";
    public static final String PROP_TV_ENABLED = "PROP_TV_ENABLED";
    public static final String PROP_TV_PLATFORM = "PROP_TV_PLATFORM";
    public static final String PROP_AUTO_ENABLED = "PROP_TV_ENABLED";
    public static final String PROP_MAX_BUILD_LEVEL = "PROP_MAX_BUILD_LEVEL";
    private AndroidProjectTemplateWizardPanellVisualAndroidSettings panel;
    private AndroidSdk androidSdk;

    public AndroidProjectTemplatePanelVisualAndroidSettings(AndroidProjectTemplateWizardPanellVisualAndroidSettings panel) {
        initComponents();
        this.panel = panel;
        // Register listener on the textFields to make the automatic updates
        phoneEnabled.addItemListener(this);
        wearEnabled.addItemListener(this);
        tvEnabled.addItemListener(this);
        autoEnabled.addItemListener(this);
        phonePlatforms.addItemListener(this);
        wearPlatforms.addItemListener(this);
        tvPlatforms.addItemListener(this);
        helpText.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent me) {
                NotifyDescriptor nd = new NotifyDescriptor.Message(new AndroidDistributionsPanel());
                DialogDisplayer.getDefault().notify(nd);
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        phoneEnabled = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        phonePlatforms = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        apiHelpText = new javax.swing.JLabel();
        helpText = new javax.swing.JLabel();
        wearEnabled = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        wearPlatforms = new javax.swing.JComboBox<>();
        tvEnabled = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        tvPlatforms = new javax.swing.JComboBox<>();
        autoEnabled = new javax.swing.JCheckBox();

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(AndroidProjectTemplatePanelVisualAndroidSettings.class, "AndroidProjectTemplatePanelVisualAndroidSettings.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(AndroidProjectTemplatePanelVisualAndroidSettings.class, "AndroidProjectTemplatePanelVisualAndroidSettings.jLabel4.text")); // NOI18N

        phoneEnabled.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(phoneEnabled, org.openide.util.NbBundle.getMessage(AndroidProjectTemplatePanelVisualAndroidSettings.class, "AndroidProjectTemplatePanelVisualAndroidSettings.phoneEnabled.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(AndroidProjectTemplatePanelVisualAndroidSettings.class, "AndroidProjectTemplatePanelVisualAndroidSettings.jLabel5.text")); // NOI18N

        phonePlatforms.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(AndroidProjectTemplatePanelVisualAndroidSettings.class, "AndroidProjectTemplatePanelVisualAndroidSettings.jLabel6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(apiHelpText, org.openide.util.NbBundle.getMessage(AndroidProjectTemplatePanelVisualAndroidSettings.class, "AndroidProjectTemplatePanelVisualAndroidSettings.apiHelpText.text")); // NOI18N

        helpText.setForeground(new java.awt.Color(0, 51, 255));
        org.openide.awt.Mnemonics.setLocalizedText(helpText, org.openide.util.NbBundle.getMessage(AndroidProjectTemplatePanelVisualAndroidSettings.class, "AndroidProjectTemplatePanelVisualAndroidSettings.helpText.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(wearEnabled, org.openide.util.NbBundle.getMessage(AndroidProjectTemplatePanelVisualAndroidSettings.class, "AndroidProjectTemplatePanelVisualAndroidSettings.wearEnabled.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(AndroidProjectTemplatePanelVisualAndroidSettings.class, "AndroidProjectTemplatePanelVisualAndroidSettings.jLabel8.text")); // NOI18N

        wearPlatforms.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        org.openide.awt.Mnemonics.setLocalizedText(tvEnabled, org.openide.util.NbBundle.getMessage(AndroidProjectTemplatePanelVisualAndroidSettings.class, "AndroidProjectTemplatePanelVisualAndroidSettings.tvEnabled.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(AndroidProjectTemplatePanelVisualAndroidSettings.class, "AndroidProjectTemplatePanelVisualAndroidSettings.jLabel9.text")); // NOI18N

        tvPlatforms.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        org.openide.awt.Mnemonics.setLocalizedText(autoEnabled, org.openide.util.NbBundle.getMessage(AndroidProjectTemplatePanelVisualAndroidSettings.class, "AndroidProjectTemplatePanelVisualAndroidSettings.autoEnabled.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(phonePlatforms, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(apiHelpText)
                                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(helpText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 7, Short.MAX_VALUE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(wearPlatforms, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tvPlatforms, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(wearEnabled)
                                    .addComponent(phoneEnabled)
                                    .addComponent(tvEnabled)
                                    .addComponent(autoEnabled))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(phoneEnabled)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(phonePlatforms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(apiHelpText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(helpText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(wearEnabled)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(wearPlatforms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(tvEnabled)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tvPlatforms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(autoEnabled)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel apiHelpText;
    private javax.swing.JCheckBox autoEnabled;
    private javax.swing.JLabel helpText;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JCheckBox phoneEnabled;
    private javax.swing.JComboBox<String> phonePlatforms;
    private javax.swing.JCheckBox tvEnabled;
    private javax.swing.JComboBox<String> tvPlatforms;
    private javax.swing.JCheckBox wearEnabled;
    private javax.swing.JComboBox<String> wearPlatforms;
    // End of variables declaration//GEN-END:variables

    @Override
    public void addNotify() {
        super.addNotify();
        //same problem as in 31086, initial focus on Cancel button
        phoneEnabled.requestFocus();
    }

    boolean valid(WizardDescriptor wizardDescriptor) {

        boolean status = phoneEnabled.isSelected() || wearEnabled.isSelected() || tvEnabled.isSelected() || autoEnabled.isSelected();
        if (!status) {
            wizardDescriptor.putProperty("WizardPanel_errorMessage",
                    "You must select at least one option.");
        }else{
            wizardDescriptor.putProperty("WizardPanel_errorMessage",
                    null);
        }
        return status;
    }

    void store(WizardDescriptor d) {
        d.putProperty(PROP_PHONE_TABLET_ENABLED, phoneEnabled.isSelected());
        d.putProperty(PROP_WEAR_ENABLED, wearEnabled.isSelected());
        d.putProperty(PROP_TV_ENABLED, tvEnabled.isSelected());
        d.putProperty(PROP_AUTO_ENABLED, autoEnabled.isSelected());
        d.putProperty(PROP_PHONE_TABLET_PLATFORM, phonePlatforms.getSelectedItem());
        d.putProperty(PROP_WEAR_PLATFORM, wearPlatforms.getSelectedItem());
        d.putProperty(PROP_TV_PLATFORM, tvPlatforms.getSelectedItem());
    }

    private void updateDistribution() {
        AndroidPlatformInfo selectedItem = (AndroidPlatformInfo) phonePlatforms.getSelectedItem();
        int apiLevel = selectedItem.getAndroidVersion().getApiLevel();
        apiHelpText.setText(AndroidDistributionsProvider.getApiHelpText(apiLevel, "" + apiLevel));
    }

    void read(WizardDescriptor settings) {
        androidSdk = (AndroidSdk) settings.getProperty(PROP_PROJECT_SDK);
        List<AndroidPlatformInfo> platforms = new ArrayList<>(androidSdk.getPlatforms());
        platforms.sort(new Comparator<AndroidPlatformInfo>() {
            @Override
            public int compare(AndroidPlatformInfo o1, AndroidPlatformInfo o2) {
                return Integer.compare(o1.getAndroidVersion().getApiLevel(), o2.getAndroidVersion().getApiLevel());
            }
        });
        int maxBuildLevel = 0;
        phonePlatforms.setModel(new DefaultComboBoxModel(platforms.toArray()));
        phonePlatforms.setRenderer(new ComboBoxRenderer());
        for (Iterator<AndroidPlatformInfo> iterator = platforms.iterator(); iterator.hasNext();) {
            AndroidPlatformInfo next = iterator.next();
            if (next.getAndroidVersion().getFeatureLevel() > maxBuildLevel) {
                maxBuildLevel = next.getAndroidVersion().getFeatureLevel();
            }
            if (next.getAndroidVersion().getApiLevel() < 20) {
                iterator.remove();
            }
        }
        settings.putProperty(PROP_MAX_BUILD_LEVEL, maxBuildLevel);
        wearPlatforms.setModel(new DefaultComboBoxModel(platforms.toArray()));
        wearPlatforms.setRenderer(new ComboBoxRenderer());
        for (Iterator<AndroidPlatformInfo> iterator = platforms.iterator(); iterator.hasNext();) {
            AndroidPlatformInfo next = iterator.next();
            if (next.getAndroidVersion().getApiLevel() < 21) {
                iterator.remove();
            }
        }
        tvPlatforms.setModel(new DefaultComboBoxModel(platforms.toArray()));
        tvPlatforms.setRenderer(new ComboBoxRenderer());
        phonePlatforms.addItemListener(this);
        updateDistribution();
        if (settings.getProperty(PROP_PHONE_TABLET_ENABLED) instanceof Boolean) {
            phoneEnabled.setSelected((boolean) settings.getProperty(PROP_PHONE_TABLET_ENABLED));
        }
        if (settings.getProperty(PROP_WEAR_ENABLED) instanceof Boolean) {
            wearEnabled.setSelected((boolean) settings.getProperty(PROP_WEAR_ENABLED));
        }
        if (settings.getProperty(PROP_TV_ENABLED) instanceof Boolean) {
            tvEnabled.setSelected((boolean) settings.getProperty(PROP_TV_ENABLED));
        }
        if (settings.getProperty(PROP_AUTO_ENABLED) instanceof Boolean) {
            autoEnabled.setSelected((boolean) settings.getProperty(PROP_AUTO_ENABLED));
        }

        if (settings.getProperty(PROP_PHONE_TABLET_PLATFORM) instanceof AndroidPlatformInfo) {
            phonePlatforms.setSelectedItem((AndroidPlatformInfo) settings.getProperty(PROP_PHONE_TABLET_PLATFORM));
        }
        if (settings.getProperty(PROP_WEAR_PLATFORM) instanceof AndroidPlatformInfo) {
            wearPlatforms.setSelectedItem((AndroidPlatformInfo) settings.getProperty(PROP_WEAR_PLATFORM));
        }
        if (settings.getProperty(PROP_TV_PLATFORM) instanceof AndroidPlatformInfo) {
            tvPlatforms.setSelectedItem((AndroidPlatformInfo) settings.getProperty(PROP_TV_PLATFORM));
        }

    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        updateDistribution();
        panel.fireChangeEvent();
    }

    class ComboBoxRenderer extends BasicComboBoxRenderer {

        @Override
        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            JLabel label = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            AndroidPlatformInfo info = (AndroidPlatformInfo) value;
            int apiLevel = info.getAndroidVersion().getApiLevel();
            label.setText("API " + apiLevel + " : " + SdkVersionInfo.getVersionWithCodename(info.getAndroidVersion()));
            return label;
        }

    }

    void validate(WizardDescriptor d) throws WizardValidationException {
        // nothing to validate
    }
}
