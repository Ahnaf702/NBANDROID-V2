/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.netbeans.modules.android.project.launch;

import com.android.builder.model.AndroidProject;
import com.android.ide.common.xml.ManifestData;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.FileInputStream;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import org.nbandroid.netbeans.gradle.api.AndroidProjects;
import org.netbeans.api.project.Project;
import org.netbeans.modules.android.spi.MainActivityConfiguration;
import org.openide.util.Exceptions;

/**
 *
 * @author arsi
 */
public class ActivitySelectorPanel extends javax.swing.JPanel implements ItemListener {

    private final MainActivityConfiguration activityConfiguration;
    private final Project project;

    /**
     * Creates new form ActivitySelectorPanel
     */
    public ActivitySelectorPanel(MainActivityConfiguration activityConfiguration, Project project, boolean root) {
        initComponents();
        this.activityConfiguration = activityConfiguration;
        this.project = project;
        //TODO Show root panel only if selected activity has no export true parameter
        rootPanel.setVisible(!root);
        AndroidProject androidProject = project.getLookup().lookup(AndroidProject.class);
        if (androidProject != null) {
            File manifestFile = androidProject.getDefaultConfig().getSourceProvider().getManifestFile();
            try {
                ManifestData manifest = AndroidProjects.parseProjectManifest(new FileInputStream(manifestFile));
                ManifestData.Activity[] activities = manifest.getActivities();
                Vector<String> tmp = new Vector<>();
                for (ManifestData.Activity activitie : activities) {
                    tmp.add(activitie.getName());
                }
                if (manifest.getLauncherActivity() != null) {
                    hideWarning();
                }
                activityToLaunch.setModel(new DefaultComboBoxModel<>(tmp));
                activityToLaunch.setSelectedItem(activityConfiguration.getMainActivity());
            } catch (Exception ex) {
                Exceptions.printStackTrace(ex);
                activityToLaunch.setModel(new DefaultComboBoxModel<>());
            }
        }
        dontAsk.addItemListener(this);

    }

    private void hideWarning() {
        l1.setVisible(false);
        l2.setVisible(false);
        l3.setVisible(false);
        l4.setVisible(false);
        l5.setVisible(false);
        l6.setVisible(false);
        l7.setVisible(false);
        copy.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        activityToLaunch = new javax.swing.JComboBox<>();
        l1 = new javax.swing.JLabel();
        l2 = new javax.swing.JLabel();
        l3 = new javax.swing.JLabel();
        l4 = new javax.swing.JLabel();
        l5 = new javax.swing.JLabel();
        l6 = new javax.swing.JLabel();
        l7 = new javax.swing.JLabel();
        copy = new javax.swing.JButton();
        dontAsk = new javax.swing.JCheckBox();
        rootPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.jLabel1.text")); // NOI18N

        activityToLaunch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        activityToLaunch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activityToLaunchActionPerformed(evt);
            }
        });

        l1.setForeground(new java.awt.Color(204, 0, 51));
        l1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(l1, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.l1.text")); // NOI18N

        l2.setForeground(new java.awt.Color(204, 0, 51));
        l2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(l2, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.l2.text")); // NOI18N

        l3.setForeground(new java.awt.Color(204, 0, 51));
        l3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(l3, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.l3.text")); // NOI18N

        l4.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(l4, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.l4.text")); // NOI18N

        l5.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(l5, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.l5.text")); // NOI18N

        l6.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(l6, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.l6.text")); // NOI18N

        l7.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(l7, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.l7.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(copy, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.copy.text")); // NOI18N
        copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(dontAsk, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.dontAsk.text")); // NOI18N

        jLabel2.setForeground(new java.awt.Color(204, 0, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.jLabel2.text")); // NOI18N

        jLabel3.setForeground(new java.awt.Color(204, 0, 51));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.jLabel3.text")); // NOI18N

        jLabel4.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.jLabel4.text")); // NOI18N

        jLabel5.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.jLabel5.text")); // NOI18N

        jLabel6.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.jLabel6.text")); // NOI18N

        jLabel7.setForeground(new java.awt.Color(204, 0, 51));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.jLabel7.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(ActivitySelectorPanel.class, "ActivitySelectorPanel.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rootPanelLayout = new javax.swing.GroupLayout(rootPanel);
        rootPanel.setLayout(rootPanelLayout);
        rootPanelLayout.setHorizontalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(rootPanelLayout.createSequentialGroup()
                        .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(rootPanelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)))
                            .addComponent(jButton1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        rootPanelLayout.setVerticalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(l1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(l2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(l3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l6)
                            .addComponent(l5))
                        .addContainerGap(330, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l7)
                            .addComponent(copy)
                            .addComponent(dontAsk))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(activityToLaunch, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(l4)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addComponent(rootPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(activityToLaunch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rootPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dontAsk))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyActionPerformed
        // TODO add your handling code here:
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        StringSelection stringSelection = new StringSelection(""
                + "            <intent-filter>\n"
                + "                <action android:name=\"android.intent.action.MAIN\" />\n"
                + "                <category android:name=\"android.intent.category.LAUNCHER\" />\n"
                + "            </intent-filter>");
        clipboard.setContents(stringSelection, null);
    }//GEN-LAST:event_copyActionPerformed

    private void activityToLaunchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activityToLaunchActionPerformed
        // TODO add your handling code here:
        Object selectedItem = activityToLaunch.getSelectedItem();
        if (selectedItem instanceof String) {
            activityConfiguration.setMainActivity((String) selectedItem);
        }
    }//GEN-LAST:event_activityToLaunchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        StringSelection stringSelection = new StringSelection("android:exported=\"true\"");
        clipboard.setContents(stringSelection, null);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> activityToLaunch;
    private javax.swing.JButton copy;
    private javax.swing.JCheckBox dontAsk;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l3;
    private javax.swing.JLabel l4;
    private javax.swing.JLabel l5;
    private javax.swing.JLabel l6;
    private javax.swing.JLabel l7;
    private javax.swing.JPanel rootPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void itemStateChanged(ItemEvent e) {
        activityConfiguration.setAskBeforeLaunch(!dontAsk.isSelected());
    }
}
