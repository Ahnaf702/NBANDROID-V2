/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.netbeans.modules.android.project.properties.ui;

import java.awt.Component;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListModel;
import javax.swing.event.ListDataListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.netbeans.api.project.Project;
import org.netbeans.modules.android.project.api.NbAndroidProjectConfiguration;
import org.netbeans.modules.android.project.api.NbAndroidProjectConfigurationProvider;
import org.netbeans.spi.project.ui.support.ProjectCustomizer;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.util.Exceptions;
import org.openide.util.Lookup;

/**
 *
 * @author arsi
 */
public class ProfilesConfigPanel extends javax.swing.JPanel implements ListSelectionListener {

    private final NbAndroidProjectConfigurationProvider configurationProvider;
    private List<NbAndroidProjectConfiguration> configurations;
    private final List<ListDataListener> listeners = new ArrayList<>();

    /**
     * Creates new form ProfilesConfigPanel
     */
    public ProfilesConfigPanel(ProjectCustomizer.Category category, Lookup context) {
        initComponents();
        Project project = context.lookup(Project.class);
        configurationProvider = project.getLookup().lookup(NbAndroidProjectConfigurationProvider.class);
        configurations = new ArrayList<>(configurationProvider.getConfigurations());
        list.setModel(new ConfigListModel());
        list.setCellRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                JLabel label = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus); //To change body of generated methods, choose Tools | Templates.
                NbAndroidProjectConfiguration tmp = (NbAndroidProjectConfiguration) value;
                label.setText(tmp.getHtmlDisplayName());
                return label;
            }

        });
        list.getSelectionModel().addListSelectionListener(this);
        remove.setEnabled(false);
        activate.setEnabled(false);
    }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        if (!e.getValueIsAdjusting()) {
            NbAndroidProjectConfiguration selectedValue = list.getSelectedValue();
            if (selectedValue == null) {
                remove.setEnabled(false);
                activate.setEnabled(false);
            } else if (selectedValue.isDefault()) {
                remove.setEnabled(false);
                activate.setEnabled(true);
            } else {
                remove.setEnabled(true);
                activate.setEnabled(true);
            }
        }
    }

    private class ConfigListModel implements ListModel<NbAndroidProjectConfiguration> {

        @Override
        public int getSize() {
            return configurations.size();
        }

        @Override
        public NbAndroidProjectConfiguration getElementAt(int index) {
            return configurations.get(index);
        }

        @Override
        public void addListDataListener(ListDataListener l) {
            listeners.add(l);
        }

        @Override
        public void removeListDataListener(ListDataListener l) {
            listeners.remove(l);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        activate = new javax.swing.JButton();
        add = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ProfilesConfigPanel.class, "ProfilesConfigPanel.jLabel1.text")); // NOI18N

        list.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(list);

        org.openide.awt.Mnemonics.setLocalizedText(activate, org.openide.util.NbBundle.getMessage(ProfilesConfigPanel.class, "ProfilesConfigPanel.activate.text")); // NOI18N
        activate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activateActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(add, org.openide.util.NbBundle.getMessage(ProfilesConfigPanel.class, "ProfilesConfigPanel.add.text")); // NOI18N
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(remove, org.openide.util.NbBundle.getMessage(ProfilesConfigPanel.class, "ProfilesConfigPanel.remove.text")); // NOI18N
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(ProfilesConfigPanel.class, "ProfilesConfigPanel.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(ProfilesConfigPanel.class, "ProfilesConfigPanel.jLabel3.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(activate)
                                    .addComponent(add)
                                    .addComponent(remove))))
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {activate, add, remove});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(activate)
                        .addGap(18, 18, 18)
                        .addComponent(add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remove))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void activateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activateActionPerformed
        // TODO add your handling code here:
        NbAndroidProjectConfiguration selectedValue = list.getSelectedValue();
        if(selectedValue!=null){
            try {
                configurationProvider.setActiveConfiguration(selectedValue);
            } catch (IllegalArgumentException ex) {
                Exceptions.printStackTrace(ex);
            } catch (IOException ex) {
                Exceptions.printStackTrace(ex);
            }
        }
        list.setModel(new ConfigListModel());
    }//GEN-LAST:event_activateActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        NotifyDescriptor.InputLine nd = new NotifyDescriptor.InputLine("New Profile name:", "Add Configuration profile");
        Object notify = DialogDisplayer.getDefault().notify(nd);
        if(NotifyDescriptor.OK_OPTION.equals(notify)){
            String inputText = nd.getInputText();
            if(inputText!=null && !"".equals(inputText)){
                inputText = NbAndroidProjectConfigurationProvider.getSafeProfileName(inputText);
                configurationProvider.addConfiguration(new NbAndroidProjectConfiguration(inputText, configurationProvider));
            }
        }
        configurations = new ArrayList<>(configurationProvider.getConfigurations());
        list.setModel(new ConfigListModel());
    }//GEN-LAST:event_addActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        // TODO add your handling code here:
        NbAndroidProjectConfiguration selectedValue = list.getSelectedValue();
        if(selectedValue!=null){
            configurationProvider.removeConfiguration(selectedValue);
        }
        configurations = new ArrayList<>(configurationProvider.getConfigurations());
        list.setModel(new ConfigListModel());
    }//GEN-LAST:event_removeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton activate;
    private javax.swing.JButton add;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<NbAndroidProjectConfiguration> list;
    private javax.swing.JButton remove;
    // End of variables declaration//GEN-END:variables
}
