/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.nbandroid.netbeans.gradle.v2.layout.layout;

import javax.swing.JPanel;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.Mode;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.nbandroid.netbeans.gradle.v2.layout.layout//LaoutPreview//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "LaoutPreviewTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE",
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "commonpalette", openAtStartup = false)
@ActionID(category = "Window", id = "org.nbandroid.netbeans.gradle.v2.layout.layout.LaoutPreviewTopComponent")
@ActionReference(path = "Menu/Window/Android" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_LaoutPreviewAction",
        preferredID = "LaoutPreviewTopComponent"
)
@Messages({
    "CTL_LaoutPreviewAction=Android Laout Preview",
    "CTL_LaoutPreviewTopComponent=Laout Preview",
    "HINT_LaoutPreviewTopComponent=This is a LaoutPreview window"
})
public final class LaoutPreviewTopComponent extends TopComponent {

    static void showLaoutPreview(JPanel panel, String name) {
        WindowManager wm = WindowManager.getDefault();
        TopComponent topComponent = wm.findTopComponent("LaoutPreviewTopComponent"); // NOI18N
        if (topComponent == null) {
            topComponent = new LaoutPreviewTopComponent();
        }
        if (topComponent instanceof LaoutPreviewTopComponent) {
            if (!topComponent.isOpened()) {
                Mode mode = wm.findMode("commonpalette");
                if (mode != null) {
                    mode.dockInto(topComponent);
                }
                topComponent.removeAll();
                if (panel != null) {
                    topComponent.add(panel);
                }
                topComponent.updateUI();
                topComponent.setName("Laout Preview [" + name + "]");
                topComponent.setToolTipText("Laout Preview [" + name + "]");
                topComponent.open();
            }
        }

    }

    static void refresh() {
        WindowManager wm = WindowManager.getDefault();
        TopComponent topComponent = wm.findTopComponent("LaoutPreviewTopComponent"); // NOI18N
        topComponent.invalidate();
        topComponent.repaint();

    }

    static void hideLaoutPreview() {
        WindowManager wm = WindowManager.getDefault();
        TopComponent topComponent = wm.findTopComponent("LaoutPreviewTopComponent"); // NOI18N
        if (null != topComponent) {
            topComponent.removeAll();
            topComponent.close();
        }
    }

    public LaoutPreviewTopComponent() {
        initComponents();
        setName(Bundle.CTL_LaoutPreviewTopComponent());
        setToolTipText(Bundle.HINT_LaoutPreviewTopComponent());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.CardLayout());
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

}
